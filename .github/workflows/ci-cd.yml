name: CI_CD
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # test:
  #   name: Rspec Rails App
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres
  #         POSTGRES_DB: postgres
  #       ports: ['5432:5432']
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Setup Ruby
  #       uses: actions/setup-ruby@v1
  #       with:
  #         ruby-version: 2.6.6
  #     - name: Build and run tests
  #       env:
  #         RAILS_ENV: test
  #         RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres
  #         POSTGRES_DB: postgres
  #         POSTGRES_HOST: localhost
  #         POSTGRES_PORT: 5432
  #         AWS_ACCESS_KEY_ID: AWS
  #         AWS_SECRET_ACCESS_KEY: AWS
  #         # DATABASE_URL: postgres://postgres:@localhost:5432/test
  #       run: |
  #         sudo apt-get -yqq install libpq-dev
  #         gem install bundler -v 1.17.2
  #         bundle install --jobs 4 --retry 3
  #         bundle exec rails db:prepare
  #         bundle exec rspec

  deploy:
    name: Deploy job
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v1

      - name: Build Docker image
        run: |
          docker build . -f ./Dockerfile.prod --tag gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}

      - name: Authenticate into Google Cloud Platform
        uses: actions/gcloud/auth@master
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}

      - name: Configure Docker to use Google Cloud Platform
        run: "gcloud auth configure-docker --quiet"

      - name: Push image to Google Cloud Container Registry
        run: docker push gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}

      - name: Install beta commands and deploy on cloud run
        run: |
          gcloud run deploy ${{ secrets.GCLOUD_APP_NAME }} --quiet --image gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }} --project ${{ secrets.GCLOUD_PROJECT }} --region europe-west2 --platform managed